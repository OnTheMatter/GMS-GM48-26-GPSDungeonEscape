<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grid_size_x = 640;
grid_size_y = 480;
grids_x = room_width div grid_size_x;
grids_y = room_height div grid_size_y;
grid = ds_grid_create(grids_x,grids_y);
for (var xx = 0; xx &lt; ds_grid_width(grid); xx++)
{
    for (var yy = 0; yy &lt; ds_grid_height(grid); yy++)
    {
        ds_grid_set(grid,xx,yy,ds_map_create());
        ds_map_add(ds_grid_get(grid,xx,yy),"NORTHDOOR",true);
        ds_map_add(ds_grid_get(grid,xx,yy),"SOUTHDOOR",true);
        ds_map_add(ds_grid_get(grid,xx,yy),"WESTDOOR",true);
        ds_map_add(ds_grid_get(grid,xx,yy),"EASTDOOR",true);
        ds_map_add(ds_grid_get(grid,xx,yy),"START",false);
        ds_map_add(ds_grid_get(grid,xx,yy),"KEYROOM",false);
        ds_map_add(ds_grid_get(grid,xx,yy),"MONSTERSPAWN",false);
        ds_map_add(ds_grid_get(grid,xx,yy),"EXIT",false);

    }
}
//generate_map();
do
{
    var player_x = irandom(ds_grid_width(grid) - 1);
    var player_y = irandom(ds_grid_height(grid) - 1);
    var door_x = irandom(ds_grid_width(grid) - 1);
    var door_y = irandom(ds_grid_height(grid) - 1);
    var key_x = irandom(ds_grid_width(grid) - 3);
    var key_y = irandom(ds_grid_height(grid) - 1);
}
until(point_distance(player_x,player_y,door_x,door_y) &gt; ds_grid_width(grid) div 2);

ds_map_replace(ds_grid_get(grid,player_x,player_y),"START",true);
ds_map_replace(ds_grid_get(grid,door_x,door_y),"EXIT",true);
ds_map_replace(ds_grid_get(grid,key_x,key_y),"KEYROOM",true);

for (var xx = 0; xx &lt; ds_grid_width(grid); xx++)
{
    for (var yy = 0; yy &lt; ds_grid_height(grid); yy++)
    {
        generate_room(xx * grid_size_x,yy * grid_size_y,grid_size_x,grid_size_y,ds_grid_get(grid,xx,yy));
    }
}
if (global.cycles &gt;= 5)
{
    instance_create(irandom_range(32,room_width-32),irandom_range(24,room_width - 24),obj_secret_key);
}
for (var xx = 0; xx&lt;=room_width;xx+=32)
for (var yy = 0; yy&lt;=room_height;yy+=24)
    {
    if (tile_layer_find(-5,xx,yy))
        {
            instance_create(xx,yy,obj_wall);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var xx = 0; xx &lt; ds_grid_width(grid); xx++)
{
    for (var yy = 0; yy &lt; ds_grid_height(grid); yy++)
    {
        ds_map_destroy(ds_grid_get(grid,xx,yy));
    }
}
ds_grid_destroy(grid);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
